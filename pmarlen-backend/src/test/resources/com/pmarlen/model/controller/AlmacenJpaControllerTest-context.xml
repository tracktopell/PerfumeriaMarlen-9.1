<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/context
                           http://www.springframework.org/schema/context/spring-context.xsd
                           http://www.springframework.org/schema/tx
                           http://www.springframework.org/schema/tx/spring-tx.xsd
                           http://www.springframework.org/schema/jdbc
                           http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
                           http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
                           http://www.springframework.org/schema/aop
                           http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">

    <context:component-scan base-package="com.pmarlen" />

    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations" value="classpath:/jdbc-test.properties"/>
    </bean>

    <tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true"/>

    <jdbc:initialize-database data-source="dataSourceX">
        <jdbc:script location="classpath:/initScenarioForTest.sql"/>
    </jdbc:initialize-database>

    <bean id="dataSourceX" class="org.springframework.jdbc.datasource.SingleConnectionDataSource"
          lazy-init="true">
        <property name="driverClassName"   value="${jdbc.driverClassName}"/>
        <property name="url"               value="${jdbc.url}"/>
        <property name="username"          value="${jdbc.username}"/>
        <property name="password"          value="${jdbc.password}"/>
        <property name="suppressClose"     value="true"/>
    </bean>

    <bean id="entityManagerFactory"
          class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"
    	  p:dataSource-ref="dataSourceX"
          p:persistenceUnitName="PMARLEN_LOGIC_PU"
          lazy-init="true">

        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter" />
        </property>

    </bean>

    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory"/>
    </bean>

    <aop:config>
        <aop:pointcut id="almacenServiceMethods" expression="execution(* com.pmarlen.model.controller.AlmacenJpaDao.*(..))"/>
        <aop:advisor advice-ref="txAdvice" pointcut-ref="almacenServiceMethods"/>
    </aop:config>

    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="save"    propagation="REQUIRES_NEW"/>
            <tx:method name="update"  propagation="REQUIRED"/>
            <tx:method name="delete"  propagation="REQUIRED"/>
            <tx:method name="findBy*" propagation="SUPPORTS" read-only="true"/>
        </tx:attributes>
    </tx:advice>

</beans>
